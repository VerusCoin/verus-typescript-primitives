/// <reference types="node" />
/// <reference types="bn.js" />
import { BigNumber } from '../utils/types/BigNumber';
import { SerializableEntity } from '../utils/types/SerializableEntity';
import { IdentityID } from './IdentityID';
import { KeyID } from './KeyID';
import { SaplingPaymentAddress } from './SaplingPaymentAddress';
import { PartialMMRData, PartialMMRDataJson } from './PartialMMRData';
export declare type PartialSignDataInitData = {
    flags?: BigNumber;
    address?: IdentityID | KeyID;
    prefixstring?: Buffer;
    vdxfkeys?: Array<IdentityID>;
    vdxfkeynames?: Array<Buffer>;
    boundhashes?: Array<Buffer>;
    hashtype?: BigNumber;
    encrypttoaddress?: SaplingPaymentAddress;
    createmmr?: boolean;
    signature?: Buffer;
    datatype?: BigNumber;
    data?: Buffer | PartialMMRData;
};
export declare type PartialSignDataJson = {
    flags?: string;
    address?: string;
    prefixstring?: string;
    vdxfkeys?: Array<string>;
    vdxfkeynames?: Array<string>;
    boundhashes?: Array<string>;
    hashtype?: string;
    encrypttoaddress?: string;
    createmmr?: boolean;
    signature?: string;
    datatype?: string;
    data?: string | PartialMMRDataJson;
};
export declare class PartialSignData implements SerializableEntity {
    flags: BigNumber;
    address?: IdentityID | KeyID;
    prefixstring?: Buffer;
    vdxfkeys?: Array<IdentityID>;
    vdxfkeynames?: Array<Buffer>;
    boundhashes?: Array<Buffer>;
    hashtype?: BigNumber;
    encrypttoaddress?: SaplingPaymentAddress;
    createmmr?: boolean;
    signature?: Buffer;
    datatype?: BigNumber;
    data?: Buffer | PartialMMRData;
    static CONTAINS_DATA: import("bn.js");
    static CONTAINS_ADDRESS: import("bn.js");
    static CONTAINS_ENCRYPTTOADDRESS: import("bn.js");
    static CONTAINS_CURRENTSIG: import("bn.js");
    static CONTAINS_PREFIXSTRING: import("bn.js");
    static CONTAINS_VDXFKEYS: import("bn.js");
    static CONTAINS_VDXFKEYNAMES: import("bn.js");
    static CONTAINS_BOUNDHASHES: import("bn.js");
    constructor(data?: PartialSignDataInitData);
    protected containsData(): boolean;
    protected containsAddress(): boolean;
    protected containsEncrypttoAddress(): boolean;
    protected containsCurrentSig(): boolean;
    protected containsPrefixString(): boolean;
    protected containsVdxfKeys(): boolean;
    protected containsVdxfKeyNames(): boolean;
    protected containsBoundhashes(): boolean;
    private toggleContainsData;
    private toggleContainsAddress;
    private toggleContainsEncryptToAddress;
    private toggleContainsCurrentSig;
    private toggleContainsPrefixString;
    private toggleContainsVdxfKeys;
    private toggleContainsVdxfKeyNames;
    private toggleContainsBoundHashes;
    isMMRData(): boolean;
    private getPartialSignDataByteLength;
    getByteLength(): number;
    fromBuffer(buffer: Buffer, offset?: number): number;
    toBuffer(): Buffer;
    toJson(): PartialSignDataJson;
    static fromJson(json: PartialSignDataJson): PartialSignData;
}
